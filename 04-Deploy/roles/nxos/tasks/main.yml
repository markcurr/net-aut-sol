---


- name: enable shared nxos features
  nxos_feature:
    state: enabled
    feature: "{{ item }}"
  with_list: "{{ nxos_features }}"
  
- name: build left ethernet list
  set_fact: 
    eth_interfaces: "{{ eth_interfaces | default({}) | combine({ item.left_port: item.left_ip }) }}"
  loop: "{{ fabric|json_query(query) }}"
  vars: 
    query: '@[?left==`{{inventory_hostname}}`]'
  loop_control: 
    label: "{{item.left}} {{item.left_port}}<-->{{item.right_port}} {{item.right}} "
  
- name: build right ethernet list
  set_fact: 
    eth_interfaces: "{{ eth_interfaces | default({}) | combine({ item.right_port: item.right_ip }) }}"
  loop: "{{ fabric|json_query(query) }}"
  vars: 
    query: '@[?right==`{{inventory_hostname}}`]'
  loop_control: 
    label: "{{item.left}} {{item.left_port}}<-->{{item.right_port}} {{item.right}} "
  

- name: build local loopback list
  set_fact:
    loop_interfaces: "{{ loop_interfaces | default([]) | combine (item) }}"
  loop: "{{ loopbacks | json_query(jquery) }}"
  vars:
    jquery: '*.{{inventory_hostname}}'

 
- name: admin up ethernet interfaces
  nxos_interface:
   admin_state: up
   interface: "{{ item.key }}"
   state: present
   mode: layer3
  with_dict: "{{ eth_interfaces }}"
  loop_control: 
    label: "{{ item.key }}"
  
- name: admin up loopback interfaces
  nxos_interface:
   admin_state: up
   interface: "{{ item.key }}"
   state: present
  with_dict: "{{ loop_interfaces }}"
  loop_control: 
    label: "{{ item.key }}" 
    
- name: ethernet L3 interface configuration
  nxos_ip_interface:
    interface: "{{ item.key }}"
    addr: "{{ item.value| ipaddr('address') }}"
    mask: "{{ item.value | ipaddr('prefix') }}"
  with_dict: "{{ eth_interfaces }}"
  loop_control:
    label: "{{ item.key }} : {{ item.value }}"
    
- name: loopback L3 configuration
  nxos_ip_interface:
    interface: "{{ item.key }}"
    addr: "{{ item.value| ipaddr('address') }}"
    mask: "{{ item.value | ipaddr('prefix') }}"
  with_dict: "{{ loop_interfaces }}"
  loop_control:
    label: "{{ item.key }} : {{ item.value }}"
    
- name: configure ospf domain 1
  nxos_ospf:
    state: present
    ospf: 1

- name: configure ospf interface
  nxos_interface_ospf:
    area: 0
    interface: "{{ item.key }}"
    ospf: 1
    state: present
  with_dict: "{{ eth_interfaces | combine (loop_interfaces) }}"
  loop_control:
    label: "{{ item.key }}"
  
- name: set nv overlay to evpn
  nxos_evpn_global:
        nv_overlay_evpn: true

- name: create overlay VRF
  nxos_vrf:
    vrf: overlay
    state: present
  
- name: configure BGP
  nxos_bgp: 
    router_id: "{{ item | ipaddr('address')}}"
    asn: "{{ ASN }}"
  with_items: "{{ loop_interfaces.Loopback0 }}"

  
- name: configure ipv4 address-family to advertise evpn
  nxos_bgp_af:
    asn: "{{ ASN }}"
    afi: ipv4
    safi: unicast
    vrf: overlay
    advertise_l2vpn_evpn: true
  

